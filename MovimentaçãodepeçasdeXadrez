#include <stdio.h>

#define MAX_MOVES 8

void moverTorreCima(int casas) {
    if (casas == 0) return;
    printf("Cima\n");
    moverTorreCima(casas - 1);
}

void moverTorreDireita(int casas) {
    if (casas == 0) return;
    printf("Direita\n");
    moverTorreDireita(casas - 1);
}


void moverBispoCimaDireita(int casas) {
    if (casas == 0) return;
    printf("Cima\n");
    printf("Direita\n");
    moverBispoCimaDireita(casas - 1);
}

void moverBispoComLoops(int maxVertical, int maxHorizontal) {
    for (int i = 1; i <= maxVertical; i++) {
        printf("Cima\n");
        for (int j = 1; j <= maxHorizontal; j++) {
            printf("Direita\n");
        }
        printf("\n"); 
    }
}


void moverRainhaDiagonal(int casas) {
    if (casas == 0) return;
    printf("Cima\n");
    printf("Direita\n");
    moverRainhaDiagonal(casas - 1);
}


void moverCavalo() {
    
    for (int vertical = 2; vertical <= MAX_MOVES; vertical++) {
        for (int horizontal = 1; horizontal <= MAX_MOVES; horizontal++) {
            
            if (vertical == 2 && horizontal == 1) {
                printf("Cavalo move: 2 Cima, 1 Direita\n");
                continue;  
            }

            
            if (vertical > 3 || horizontal > 3) {
                break; 
            }
        }
    }
}

int main() {
    int casas = 3; 

    printf("Movimentos da Torre:\n");
    moverTorreCima(casas);
    moverTorreDireita(casas);
    printf("\n");

    printf("Movimentos do Bispo (Recursivo):\n");
    moverBispoCimaDireita(casas);
    printf("\n");

    printf("Movimentos do Bispo (Loops Aninhados):\n");
    moverBispoComLoops(2, 2);
    printf("\n");

    printf("Movimentos da Rainha (Diagonal):\n");
    moverRainhaDiagonal(casas);
    printf("\n");

    printf("Movimentos do Cavalo (Loops Complexos):\n");
    moverCavalo();
    printf("\n");

    return 0;
}

